#! /bin/bash
# The MIT License
# 
# Copyright 2013 Eric VILLARD <dev@eviweb.fr>.
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

usage() {
    echo "usage: git ignore register <type> <name> <path>"
    echo ""
    echo "Mandatory Parameters :"
    echo "  <type>  must match one of the following values : local|git"
    echo "          local for a local directory"
    echo "          git for a git repository"
    echo "  <name>  a name identifier for the registration, spaces are not allowed"
    echo "  <path>  path of the source directory, must be a valid local path"
    echo ""
}

parse_args() {
    # parse options
    FLAGS "$@" || exit $?
    eval set -- "${FLAGS_ARGV}"

    # save file and patterns in a global variable
    TYPE=$1
    NAME=$2
    REPO_PATH=$3
}

cmd_default() {
    cmd_register "$@"
}

cmd_register() {
    parse_args "$@"

    # check provided values
    if [[ !($TYPE =~ ^(local|git)$) ]]
    then
        echo "!!! Wrong provided type !!!"
        echo ""
        usage
        exit 1
    fi
    if [[ -z $NAME ]]
    then
        echo "!!! Name could not be empty !!!"
        echo ""
        usage
        exit 1
    fi
    if [[ -z $REPO_PATH ]]
    then
        echo "!!! Path could not be empty !!!"
        echo ""
        usage
        exit 1
    fi
    if [[ ! -e $REPO_PATH ]]
    then
        echo "!!! Path not found !!!"
        echo ""
        usage
        exit 1
    fi

    # calculate absolute path for local repositories
    [[ $REPO_PATH =~ ^(\.) ]] && REPO_PATH=$(readlink -f $REPO_PATH)

    # check config file and create it if necessary
    FILE=$GITIGNORE_CONFIG_DIR/repositories
    test -e $FILE || echo "# GIT Ignore CLI - registered repositories" > $FILE

    # register the repository, if a name is already registered, related settings are updated
    PATH_PART=$(grep $REPO_PATH $FILE | awk '{print $3}')
    NAME_PART=$(grep $NAME $FILE | awk '{print $1}')
    [ "$REPO_PATH" == "$PATH_PART" ] ||
        ([ "$NAME" == "$NAME_PART" ] && sed -i "s#${NAME}\s.*#${NAME} ${TYPE} ${REPO_PATH}#" $FILE || echo "$NAME $TYPE $REPO_PATH" >> $FILE)
}

cmd_help() {
    usage
    exit 0
}